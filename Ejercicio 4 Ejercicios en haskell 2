import Data.Char (toUpper)
import Data.Map.Strict (Map)
import qualified Data.Map.Strict as Map

asignarCalificacion :: Int -> String
asignarCalificacion nota
    | nota >= 95 = "Excelente"
    | nota >= 85 = "Notable"
    | nota >= 75 = "Bueno"
    | nota >= 70 = "Suficiente"
    | otherwise = "DesempeÃ±o insuficiente"

calificacionesAlumno :: Map String Int -> Map String String
calificacionesAlumno asignaturas = Map.fromList [(map toUpper asignatura, asignarCalificacion nota) | (asignatura, nota) <- Map.toList asignaturas]

main :: IO ()
main = do
    let notas = Map.fromList [("Matematicas", 90), ("Ciencias", 80), ("Historia", 65), ("Literatura", 75),("Geografia", 85), ("Arte", 95)]
    let calificaciones = calificacionesAlumno notas
    putStrLn "Calificaciones del alumno:"
    mapM_ (\(asignatura, calificacion) -> putStrLn $ asignatura ++ ": " ++ calificacion) (Map.toList calificaciones)
